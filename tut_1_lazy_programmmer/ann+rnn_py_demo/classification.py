# -*- coding: utf-8 -*-
"""classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P7XuOb8Y5wlL7cO-4HV0T2djiH-KMvXc
"""

import numpy as np
import pandas as pd
import tensorflow as tf
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline
import tensorflow_datasets as tfds

from sklearn.datasets import load_breast_cancer
data = load_breast_cancer()

type(data)

data.keys()

data.data.shape

data.target

data.target_names

data.feature_names

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(data.data, data.target, test_size=0.3)
N, D = X_train.shape

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

model = tf.keras.models.Sequential([
    tf.keras.layers.Input(shape=(D,)),
    tf.keras.layers.Dense(1,activation='sigmoid')
])
model.compile(
    optimizer='adam',
    loss='binary_crossentropy',
    metrics='accuracy'
)

r = model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=100)

print('Train Score:', model.evaluate(X_train, y_train))
print('Test Score:', model.evaluate(X_test, y_test))

import matplotlib.pyplot as plt
plt.title('loss')
plt.plot(r.history['loss'], label = 'losss')
plt.plot(r.history['val_loss'], label = 'val_losss')
plt.legend()

plt.title('accuracy')
plt.plot(r.history['accuracy'], label='accuracy')
plt.plot(r.history['val_accuracy'], label='val_accuracy')
plt.legend()

